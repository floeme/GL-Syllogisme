{
  "universal": "Syllogism conclusion is universal",
  "home": {
    "syllogism": {
      "check": "Check Syllogism"
    },
    "discover": "Exploring",
    "discover2": "Syllogisms",
    "text1": "Syllogism is a logic allowing to link 2 premises with 1 conclusion :\n2 or more, the « premises », lead to a « conclusion »",
    "text2": "Aristote was the first to explain it in Organon.\nA known exemple is : « Every human is mortal, Socrates is human ; so Socrates is mortel »",
    "text3" : ":\nThe 2 premises (said « major » and « minor ») are propositions given and supposed right,\nSyllogism allow to establish a formal validity for the conclusion, which is right if the premises are right."
  },
  "navigation": {
    "language": "Lang",
    "menu": {
      "home": "Home",
      "syllogism": "Syllogism",
      "polysyllogism": "Polysyllogism",
      "quantifiers": "Quantifiers",
      "syllogism_table": "Syllogism Table",
      "documentation": "Documentation"
    }
  },
  "syllogism": {
    "expert": {
      "errorMessages": {
        "missingPredicate": "Please provide the second term for proposition.",
        "missingVerb": "Please provide a verb in the propositions.",
        "missingSubject": "Please provide the first term for proposition.",
        "missingQuantifier": "Please provide the quantifier for proposition "
      }
    },
    "basic": {
      "errorMessages": {
        "middleTermRepeat": "Middle term can only be repeated one time.",
        "termEqual": "Subject and predicate cannot be the same on proposition "
      }
    },
    "table": {
      "yes": "Yes",
      "no": "No",
      "prop1": "Proposition 1",
      "prop2": "Proposition 2",
      "conc": "Conclusion",
      "figure": "Figure",
      "validity": "Validity",
      "validityhe": "Validity with Existential Hypothesis",
      "is": "Interesting Syllogism"
    },
    "quantifier": {
      "A": "All",
      "E": "None",
      "I": "Some",
      "O": "Some Not"
    },
    "term_kind": {
      "major": "major term",
      "minor": "minor term",
      "middle": "middle term",
      "subject": "subject",
      "predicate": "predicate"
    },
    "rule": {
      "Rmt": {
        "name": "Middle Term Rule",
        "description": "The quantity of the middle term must be universal in at least one premise. In a polysyllogism, this rule applies individually on each middle term.",
        "passed": "The quantity of the middle term is universal in at least one premise.",
        "failed": "The quantity of the middle term is particular in both premises, so this syllogism is invalid.",
        "passed_poly": "Each middle term has universal quantity in at least one premise.",
        "failed_poly": "At least one middle term has particular quantity in both of its premises, so this polysyllogism is invalid."
      },
      "Rlh": {
        "name": "Latius-Hos Rule",
        "description": "A term of the conclusion can have universal quantity only if it has universal quantity in its premise.",
        "specific_conclusion": "Both terms from the conclusion have specific quantities, so this rule is not applicable to this syllogism.",
        "passed": "Both terms of the conclusion have universal quantity in the conclusion and their respective premise.",
        "failed": "A term from the conclusion has universal quantity in the conclusion but not in its premise. Therefore, this syllogism is invalid."
      },
      "Rnn": {
        "name": "Two Negative Premises Rule",
        "description": "Two negative premises do not lead to a conclusion.",
        "passed": "There is at least one affirmative premise.",
        "failed": "Both premises are negative, so this syllogism is invalid."
      },
      "Rn": {
        "name": "One Negative Premise Rule",
        "description": "If one premise is negative, the conclusion is negative.",
        "passed": "There is one negative premise and the conclusion is negative.",
        "failed": "There is one negative premise but the conclusion is affirmative, so this syllogism is invalid.",
        "all_affirmative_premises": "All premises are affirmative, so this rule is not applicable to this syllogism."
      },
      "Raa": {
        "name": "Two Affirmative Premises Rule",
        "description": "Two affirmative premises lead to an affirmative conclusion.",
        "passed": "Both premises are affirmative and the conclusion is affirmative.",
        "failed": "Both premises are affirmative but the conclusion is negative, so this syllogism is invalid.",
        "passed_poly": "There are at least two affirmative premises and the conclusion is affirmative.",
        "failed_poly": "There are at least two affirmative premises but the conclusion is negative, so this polysyllogism is invalid.",
        "negative_premise": "There is a negative premise, so this rule is not applicable to this syllogism.",
        "not_2_affirmative_premises": "There is less than two affirmative premises, so this rule is not applicable to this syllogism."
      },
      "Rpp": {
        "name": "Two Particular Premises Rule",
        "description": "Two particular premises do not lead to a conclusion.",
        "passed": "There is at least one universal premise.",
        "failed": "Both premises are particular, so this syllogism is invalid.",
        "passed_poly": "There is at least one universal premise.",
        "failed_poly": "There are at least two particular premises, so this polysyllogism is invalid."
      },
      "Rp": {
        "name": "One Particular Premise Rule",
        "description": "If one premise is particular, the conclusion is particular.",
        "passed": "There is a particular premise and the conclusion is particular.",
        "failed": "There is a particular premise but the conclusion is universal, so this syllogism is invalid.",
        "all_universal_premises": "All premises are universal, so this rule is not applicable to this syllogism."
      },
      "Ruu": {
        "name": "Existence Hypothesis Rule",
        "description": "Two universal premises do not lead to a particular conclusion.",
        "passed": "Both premises are universal and the conclusion is universal.",
        "failed": "Both premises are universal but the conclusion is particular, so this syllogism is invalid.",
        "passed_poly": "There are at least two universal premises and the conclusion is universal.",
        "failed_poly": "There are at least two universal premises but the conclusion is particular, so this polysyllogism is invalid.",
        "particular_premise": "There is a particular premise, so this rule is not applicable to this syllogism.",
        "not_2_universal_premises": "There are less than two universal premises, so this rule is not applicable to this syllogism."
      }
    },
    "true": "This syllogism is valid",
    "false": "This syllogism is not valid",
    "summary": {
      "ok": "Passing Rules",
      "ko": "Failing Rules"
    },
    "has_figure": "This syllogism belongs to figure {{number}}.",
    "conclusion_term_tooltip": {
      "subject": "The subject of the conclusion is the term which appears in the second premise.",
      "predicate": "The predicate of the conclusion is the term which appears in the first premise.",
      "swap": "If you want to swap the subject and the predicate, swap the premises."
    },
    "valid_with_universal_conclusion": "This syllogism is \"uninteresting\".",
    "valid_with_universal_conclusion_description": "It is valid, but its existential conclusion could be replaced by a universal one, which is stronger."
  },
  "input": {
    "enter_term": "Enter {{kind}}",
    "check_ruu": "Check $t(syllogism.rule.Ruu.name)",
    "check": "Check",
    "enter_verb": "Enter a verb",
    "verb_tooltip": "Input an affirmative verb to link the terms (optional). Do not input a negative one!",
    "select_type_term": "Select or type a term",
    "select_term": "Select a term",
    "type_term": "Type a term",
    "guided": "Guided Input",
    "expert": "Expert Mode",
    "invalid": "Invalid input"
  },
  "polysyllogism": {
    "errorMessages": {
      "missingPredicate": "Please provide the second term for proposition ",
      "missingVerb": "Please provide a verb in the propositions.",
      "missingSubject": "Please provide the first term for proposition ",
      "missingQuantifier": "Please provide the quantifier for proposition ",
      "invalidStructure": "Polysyllogism structure is invalid"
    },
    "buttons": {
      "add": "Add a proposition",
      "reorder": "Reorder the polysyllogism",
      "check": "Check"
    },
    "labels": {
      "existenceHypothesis": "Existence Hypothesis"
    },
    "placeholder": {
      "firstTerm": "Enter a first term",
      "verb": "Enter a verb",
      "secondTerm": "Enter a second term"
    }
  },
  "quantifier_aliases": {
    "title": "Quantifier Aliases",
    "input": "Input a quantifier alias",
    "add": "Add",
    "remove": "Remove",
    "reset": "Reset to defaults"
  },
  "toolbar": {
    "clear_syllogism": "Clear syllogism",
    "clear_polysyllogism": "Clear polysyllogism",
    "help": "Help",
    "settings": "Manage quantifier aliases"
  }
}